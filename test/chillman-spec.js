// Generated by CoffeeScript 1.10.0
(function() {
  var Chillman, debug, defer, expect;

  expect = require("chai").expect;

  Chillman = require('../lib/Chillman');

  defer = require('node-promise').defer;

  debug = process.env['DEBUG'];

  describe("Chillman test", function() {
    before(function(done) {
      return done();
    });
    return it("should pause a second request before the first is completed and have both return same value", function(done) {
      var count, landing, results, scarceResource, scarcecounter;
      scarcecounter = 0;
      scarceResource = function(key) {
        var q;
        q = defer();
        setTimeout(function() {
          var rv;
          rv = key + '_' + (scarcecounter++);
          console.log('scarceResource called. rv = ' + rv);
          return q.resolve(rv);
        }, 50);
        return q;
      };
      count = 0;
      results = [];
      landing = function(result) {
        results.push(result);
        if (++count === 2) {
          expect(results[0]).to.equal(results[1]);
          console.dir(results);
          return done();
        }
      };
      Chillman.lookup('foo', scarceResource).then(landing);
      return Chillman.lookup('foo', scarceResource).then(landing);
    });
  });

}).call(this);

//# sourceMappingURL=chillman-spec.js.map
