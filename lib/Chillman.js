// Generated by CoffeeScript 1.10.0
(function() {
  var Chillman, defer, lru,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  defer = require('node-promise').defer;

  lru = require('lru');

  Chillman = (function() {
    function Chillman() {
      this._doLookup = bind(this._doLookup, this);
      this.lookup = bind(this.lookup, this);
    }

    Chillman.underwayCache = new lru();

    Chillman.callbackCache = new lru();

    Chillman.prototype.lookup = function(key, resolveFunc) {
      var callbacks, q, underway;
      q = defer();
      underway = Chillman.underwayCache.get(key);
      if (underway) {
        callbacks = Chillman.callbackCache[key] || [];
        callbacks.push(function() {
          return q;
        });
      } else {
        Chillman.underwayCache.set(key, true);
        _doLookup(key, resolveFunc, q);
      }
      return q;
    };

    Chillman.prototype._doLookup = function(key, resolveFunc, q) {
      return resolveFunc(key).then((function(_this) {
        return function(result) {
          var callbacks;
          Chillman.underwayCache.remove(key);
          q.resolve(result);
          callbacks = Chillman.callbackCache[key] || [];
          return callbacks.forEach(function(_q) {
            return _q.resolve(result);
          });
        };
      })(this));
    };

    return Chillman;

  })();

  module.exports = Chillman;

}).call(this);

//# sourceMappingURL=Chillman.js.map
